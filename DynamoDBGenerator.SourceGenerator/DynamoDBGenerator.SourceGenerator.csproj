<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <LangVersion>10</LangVersion>
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <!-- This is required to allow copying all the dependencies to bin directory which can be copied after to nuget package based on nuspec -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    </PropertyGroup>


    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.3.0" PrivateAssets="all" />
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" />
    </ItemGroup>

    <ItemGroup>
        <!-- Generator dependencies -->
        <ProjectReference Include="..\DynamoDBGenerator\DynamoDBGenerator.csproj" PrivateAssets="all" OutputItemType="Analyzer" />
        <PackageReference Include="AWSSDK.DynamoDBv2" Version="3.7.102.18" GeneratePathProperty="true" PrivateAssets="all" />
    </ItemGroup>
    
   <PropertyGroup>
        <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
    </PropertyGroup>
    
    <Target Name="GetDependencyTargetPaths">
        <ItemGroup>
            <TargetPathWithTargetPlatformMoniker Include="$(PKGAWSSDK_DynamoDBv2)\lib\netstandard2.0\AWSSDK.DynamoDBv2.dll" IncludeRuntimeDependency="false" />
            <!-- Pack both our DLL and the dependencies into a generated Nuget Package -->
            <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
            <None Include="$(PKGAWSSDK_DynamoDBv2)\lib\netstandard2.0\AWSSDK.DynamoDBv2.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
        </ItemGroup>
    </Target>
</Project>
